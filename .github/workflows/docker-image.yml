name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }} 
        password: ${{ secrets.DOCKERHUB_TOKEN }} 

    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag my-image-name:latest

    - name: Run Trivy vulnerability scanner - FS mode
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        security-checks: 'vuln,config,secret'
        hide-progress: false
        format: 'table'
      env:
        AQUA_KEY: ${{ secrets.AQUA_KEY }}
        AQUA_SECRET: ${{ secrets.AQUA_SECRET }}
        TRIVY_RUN_AS_PLUGIN: 'aqua'
        GITHUB_TOKEN: ${{ github.token }}
          
    - name: Manifest Generation
      run: |
          export BILLY_SERVER=https://billy.codesec.aquasec.com
          curl -sLo install.sh download.codesec.aquasec.com/billy/install.sh
          curl -sLo install.sh.checksum https://github.com/argonsecurity/releases/releases/latest/download/install.sh.checksum
          if ! cat install.sh.checksum | sha256sum ; then
          echo "install.sh checksum failed"
          exit 1
          fi
          BINDIR="." sh install.sh
          rm install.sh install.sh.checksum
          ./billy generate \
            --access-token "${{ secrets.GITHUB_TOKEN }}" \
            --aqua-key "${{ secrets.AQUA_KEY }}" \
            --aqua-secret "${{ secrets.AQUA_SECRET }}" \
            --artifact-path "my-image-name:latest" 

            # The docker image name:tag of the newly built image
            # --artifact-path "my-image-name:${{ env.tag-version }}" 
            # OR the path to the root folder of your project. I.e my-repo/my-app 
            # --artifact-path "${{env.MY_APP_ROOT}}"
